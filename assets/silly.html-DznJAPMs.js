import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{e as h,f as r,g as a,h as n,i as s,j as e,r as d,o as k}from"./app-CFpmUNtW.js";const p={};function o(c,i){const l=d("RouteLink");return k(),h("div",null,[i[6]||(i[6]=r(`<h1 id="silly" tabindex="-1"><a class="header-anchor" href="#silly"><span>silly</span></a></h1><p>核心调度器模块，提供协程管理、任务调度和分布式追踪功能。</p><h2 id="模块导入" tabindex="-1"><a class="header-anchor" href="#模块导入"><span>模块导入</span></a></h2><div class="language-lua line-numbers-mode" data-highlighter="shiki" data-ext="lua" data-title="lua" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> silly</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">require</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;silly&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="常量属性" tabindex="-1"><a class="header-anchor" href="#常量属性"><span>常量属性</span></a></h2><h3 id="silly-pid" tabindex="-1"><a class="header-anchor" href="#silly-pid"><span>silly.pid</span></a></h3><ul><li><strong>类型</strong>: <code>integer</code></li><li><strong>说明</strong>: 当前进程ID</li></ul><h3 id="silly-gitsha1" tabindex="-1"><a class="header-anchor" href="#silly-gitsha1"><span>silly.gitsha1</span></a></h3><ul><li><strong>类型</strong>: <code>string</code></li><li><strong>说明</strong>: 构建时的Git SHA1版本号</li></ul><h3 id="silly-version" tabindex="-1"><a class="header-anchor" href="#silly-version"><span>silly.version</span></a></h3><ul><li><strong>类型</strong>: <code>string</code></li><li><strong>说明</strong>: Silly框架版本号</li></ul><h2 id="核心函数" tabindex="-1"><a class="header-anchor" href="#核心函数"><span>核心函数</span></a></h2><h3 id="silly-genid" tabindex="-1"><a class="header-anchor" href="#silly-genid"><span>silly.genid()</span></a></h3><p>生成全局唯一ID。</p><ul><li><strong>返回值</strong>: <code>integer</code> - 唯一ID</li><li><strong>示例</strong>:</li></ul><div class="language-lua line-numbers-mode" data-highlighter="shiki" data-ext="lua" data-title="lua" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> silly</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">require</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;silly&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">silly</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">genid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="silly-tostring-ptr" tabindex="-1"><a class="header-anchor" href="#silly-tostring-ptr"><span>silly.tostring(ptr)</span></a></h3><p>将C指针转换为字符串表示。</p><ul><li><strong>参数</strong>: <ul><li><code>ptr</code>: <code>lightuserdata</code> - C指针</li></ul></li><li><strong>返回值</strong>: <code>string</code> - 指针的十六进制字符串表示</li></ul><h3 id="silly-register-msgtype-handler" tabindex="-1"><a class="header-anchor" href="#silly-register-msgtype-handler"><span>silly.register(msgtype, handler)</span></a></h3><p>注册消息处理函数（内部API，业务代码不应使用）。</p><ul><li><strong>参数</strong>: <ul><li><code>msgtype</code>: <code>integer</code> - 消息类型</li><li><code>handler</code>: <code>function</code> - 处理函数</li></ul></li></ul><h2 id="协程管理" tabindex="-1"><a class="header-anchor" href="#协程管理"><span>协程管理</span></a></h2><h3 id="silly-running" tabindex="-1"><a class="header-anchor" href="#silly-running"><span>silly.running()</span></a></h3><p>获取当前正在运行的协程。</p><ul><li><strong>返回值</strong>: <code>thread</code> - 当前协程</li><li><strong>示例</strong>:</li></ul><div class="language-lua line-numbers-mode" data-highlighter="shiki" data-ext="lua" data-title="lua" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> silly</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">require</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;silly&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> current_task</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">silly</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">running</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="silly-fork-func" tabindex="-1"><a class="header-anchor" href="#silly-fork-func"><span>silly.fork(func)</span></a></h3><p>创建并调度一个新协程执行异步任务。</p><ul><li><strong>参数</strong>: <ul><li><code>func</code>: <code>async fun()</code> - 异步函数</li></ul></li><li><strong>返回值</strong>: <code>thread</code> - 新创建的协程</li><li><strong>示例</strong>:</li></ul><div class="language-lua line-numbers-mode" data-highlighter="shiki" data-ext="lua" data-title="lua" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> silly</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">require</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;silly&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">silly</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">fork</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Hello from forked task&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">end</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="silly-wait" tabindex="-1"><a class="header-anchor" href="#silly-wait"><span>silly.wait()</span></a></h3><p>挂起当前协程，等待被唤醒。</p><ul><li><strong>返回值</strong>: <code>any</code> - 唤醒时传入的数据</li><li><strong>注意</strong>: 必须在协程中调用，且协程状态必须为 &quot;RUN&quot;</li><li><strong>示例</strong>:</li></ul><div class="language-lua line-numbers-mode" data-highlighter="shiki" data-ext="lua" data-title="lua" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> silly</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">require</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;silly&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">silly</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">fork</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">silly</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">wait</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Woken up with data:&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">end</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="silly-wakeup-task-result" tabindex="-1"><a class="header-anchor" href="#silly-wakeup-task-result"><span>silly.wakeup(task, result)</span></a></h3><p>唤醒一个正在等待的协程。</p><ul><li><strong>参数</strong>: <ul><li><code>task</code>: <code>thread</code> - 要唤醒的协程</li><li><code>result</code>: <code>any</code> - 传递给协程的数据</li></ul></li><li><strong>注意</strong>: 目标协程状态必须为 &quot;WAIT&quot;</li><li><strong>示例</strong>:</li></ul><div class="language-lua line-numbers-mode" data-highlighter="shiki" data-ext="lua" data-title="lua" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> silly</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">require</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;silly&quot;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> time</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">require</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;silly.time&quot;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> task</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">silly</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">fork</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    task</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">silly</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">wait</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Got:&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">task</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">end</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 延迟唤醒，确保协程已经进入wait状态</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">time</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">after</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    silly</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">wakeup</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">task</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;hello&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">end</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="silly-status-task" tabindex="-1"><a class="header-anchor" href="#silly-status-task"><span>silly.status(task)</span></a></h3><p>获取协程的当前状态。</p><ul><li><strong>参数</strong>: <ul><li><code>task</code>: <code>thread</code> - 目标协程</li></ul></li><li><strong>返回值</strong>: <code>string|nil</code> - 状态字符串，可能的值： <ul><li><code>&quot;RUN&quot;</code> - 正在运行</li><li><code>&quot;WAIT&quot;</code> - 等待中</li><li><code>&quot;READY&quot;</code> - 就绪队列中</li><li><code>&quot;SLEEP&quot;</code> - 睡眠中</li><li><code>&quot;EXIT&quot;</code> - 已退出</li><li><code>nil</code> - 协程已销毁</li></ul></li></ul><h3 id="silly-exit-status" tabindex="-1"><a class="header-anchor" href="#silly-exit-status"><span>silly.exit(status)</span></a></h3><p>退出Silly进程。</p><ul><li><strong>参数</strong>: <ul><li><code>status</code>: <code>integer</code> - 退出码</li></ul></li><li><strong>示例</strong>:</li></ul><div class="language-lua line-numbers-mode" data-highlighter="shiki" data-ext="lua" data-title="lua" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> silly</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">require</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;silly&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">silly</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">exit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 正常退出</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="任务统计" tabindex="-1"><a class="header-anchor" href="#任务统计"><span>任务统计</span></a></h2><h3 id="silly-taskstat" tabindex="-1"><a class="header-anchor" href="#silly-taskstat"><span>silly.taskstat()</span></a></h3><p>获取当前就绪队列中等待执行的任务数量。</p><ul><li><strong>返回值</strong>: <code>integer</code> - 任务数量</li></ul><h3 id="silly-tasks" tabindex="-1"><a class="header-anchor" href="#silly-tasks"><span>silly.tasks()</span></a></h3><p>获取所有协程的状态信息（用于调试）。</p><ul><li><strong>返回值</strong>: <code>table</code> - 协程状态表，格式：</li></ul><div class="language-lua line-numbers-mode" data-highlighter="shiki" data-ext="lua" data-title="lua" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    [</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">thread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] = {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        traceback</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;stack trace string&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        status</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;RUN|WAIT|READY|...&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="分布式追踪" tabindex="-1"><a class="header-anchor" href="#分布式追踪"><span>分布式追踪</span></a></h2><h3 id="silly-tracenode-nodeid" tabindex="-1"><a class="header-anchor" href="#silly-tracenode-nodeid"><span>silly.tracenode(nodeid)</span></a></h3><p>设置当前节点的节点ID（用于trace ID生成）。</p><ul><li><strong>参数</strong>: <ul><li><code>nodeid</code>: <code>integer</code> - 节点ID（16位，0-65535）</li></ul></li><li><strong>示例</strong>:</li></ul><div class="language-lua line-numbers-mode" data-highlighter="shiki" data-ext="lua" data-title="lua" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> silly</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">require</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;silly&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 在服务启动时设置节点ID</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">silly</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">tracenode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 设置为节点1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="silly-tracespawn" tabindex="-1"><a class="header-anchor" href="#silly-tracespawn"><span>silly.tracespawn()</span></a></h3><p>创建新的根追踪ID并设置为当前协程的追踪ID。</p><ul><li><strong>返回值</strong>: <code>integer</code> - 之前的追踪ID（可用于后续恢复）</li><li><strong>示例</strong>:</li></ul><div class="language-lua line-numbers-mode" data-highlighter="shiki" data-ext="lua" data-title="lua" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> silly</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">require</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;silly&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 处理新的HTTP请求时创建新的trace ID</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> old_trace</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">silly</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">tracespawn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- ... 处理请求 ...</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 如需恢复旧的trace context</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">silly</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">traceset</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">old_trace</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="silly-traceset-id" tabindex="-1"><a class="header-anchor" href="#silly-traceset-id"><span>silly.traceset(id)</span></a></h3><p>设置当前协程的追踪ID。</p><ul><li><strong>参数</strong>: <ul><li><code>id</code>: <code>integer</code> - 追踪ID</li></ul></li><li><strong>返回值</strong>: <code>integer</code> - 之前的追踪ID</li></ul><h3 id="silly-tracepropagate" tabindex="-1"><a class="header-anchor" href="#silly-tracepropagate"><span>silly.tracepropagate()</span></a></h3><p>获取用于跨服务传播的追踪ID（保留root trace，替换node ID为当前节点）。</p><ul><li><strong>返回值</strong>: <code>integer</code> - 传播用的追踪ID</li><li><strong>示例</strong>:</li></ul><div class="language-lua line-numbers-mode" data-highlighter="shiki" data-ext="lua" data-title="lua" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> silly</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">require</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;silly&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 在 RPC 调用时传播 trace ID</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> trace_id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">silly</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">tracepropagate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 将 trace_id 发送到远程服务</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="错误处理" tabindex="-1"><a class="header-anchor" href="#错误处理"><span>错误处理</span></a></h2><h3 id="silly-error-errmsg" tabindex="-1"><a class="header-anchor" href="#silly-error-errmsg"><span>silly.error(errmsg)</span></a></h3><p>记录错误信息和堆栈跟踪。</p><ul><li><strong>参数</strong>: <ul><li><code>errmsg</code>: <code>string</code> - 错误消息</li></ul></li></ul><h3 id="silly-pcall-f" tabindex="-1"><a class="header-anchor" href="#silly-pcall-f"><span>silly.pcall(f, ...)</span></a></h3><p>受保护调用函数，捕获错误并生成堆栈跟踪。</p><ul><li><strong>参数</strong>: <ul><li><code>f</code>: <code>function</code> - 要调用的函数</li><li><code>...</code>: 函数参数</li></ul></li><li><strong>返回值</strong>: <ul><li><code>boolean</code> - 是否成功</li><li><code>...</code> - 成功时返回函数结果，失败时返回错误信息</li></ul></li></ul><h2 id="高级api" tabindex="-1"><a class="header-anchor" href="#高级api"><span>高级API</span></a></h2><div class="hint-container caution"><p class="hint-container-title">内部API警告</p><p>以下函数以 <code>_</code> 开头，属于内部实现细节，<strong>不应在业务代码中使用</strong>。</p></div><h3 id="silly-task-create-f" tabindex="-1"><a class="header-anchor" href="#silly-task-create-f"><span>silly._task_create(f)</span></a></h3><p>创建协程（内部API）。</p><h3 id="silly-task-resume-t" tabindex="-1"><a class="header-anchor" href="#silly-task-resume-t"><span>silly._task_resume(t, ...)</span></a></h3><p>恢复协程执行（内部API）。</p><h3 id="silly-task-yield" tabindex="-1"><a class="header-anchor" href="#silly-task-yield"><span>silly._task_yield(...)</span></a></h3><p>挂起当前协程（内部API）。</p><h3 id="silly-dispatch-wakeup" tabindex="-1"><a class="header-anchor" href="#silly-dispatch-wakeup"><span>silly._dispatch_wakeup()</span></a></h3><p>调度就绪队列中的任务（内部API）。</p><h3 id="silly-start-func" tabindex="-1"><a class="header-anchor" href="#silly-start-func"><span>silly._start(func)</span></a></h3><p>启动主协程（内部API）。</p><h3 id="silly-task-hook-create-term" tabindex="-1"><a class="header-anchor" href="#silly-task-hook-create-term"><span>silly.task_hook(create, term)</span></a></h3><p>设置协程创建和终止的钩子函数（高级用法）。</p><ul><li><strong>参数</strong>: <ul><li><code>create</code>: <code>function|nil</code> - 创建钩子</li><li><code>term</code>: <code>function|nil</code> - 终止钩子</li></ul></li><li><strong>返回值</strong>: <code>function, function</code> - 当前的resume和yield函数</li></ul><h2 id="参见" tabindex="-1"><a class="header-anchor" href="#参见"><span>参见</span></a></h2>`,93)),a("ul",null,[a("li",null,[n(l,{to:"/reference/time.html"},{default:e(()=>i[0]||(i[0]=[s("silly.time")])),_:1}),i[1]||(i[1]=s(" - 定时器和时间管理"))]),a("li",null,[n(l,{to:"/reference/hive.html"},{default:e(()=>i[2]||(i[2]=[s("silly.hive")])),_:1}),i[3]||(i[3]=s(" - 工作线程池"))]),a("li",null,[n(l,{to:"/sync/"},{default:e(()=>i[4]||(i[4]=[s("silly.sync.*")])),_:1}),i[5]||(i[5]=s(" - 同步原语"))])])])}const u=t(p,[["render",o],["__file","silly.html.vue"]]),A=JSON.parse('{"path":"/reference/silly.html","title":"silly","lang":"zh-CN","frontmatter":{"title":"silly","icon":"gear","category":["API参考"],"tag":["核心","协程","调度器"],"description":"silly 核心调度器模块，提供协程管理、任务调度和分布式追踪功能。 模块导入 常量属性 silly.pid 类型: integer 说明: 当前进程ID silly.gitsha1 类型: string 说明: 构建时的Git SHA1版本号 silly.version 类型: string 说明: Silly框架版本号 核心函数 silly.gen...","head":[["meta",{"property":"og:url","content":"https://gotocoding.com/silly/reference/silly.html"}],["meta",{"property":"og:site_name","content":"参考手册"}],["meta",{"property":"og:title","content":"silly"}],["meta",{"property":"og:description","content":"silly 核心调度器模块，提供协程管理、任务调度和分布式追踪功能。 模块导入 常量属性 silly.pid 类型: integer 说明: 当前进程ID silly.gitsha1 类型: string 说明: 构建时的Git SHA1版本号 silly.version 类型: string 说明: Silly框架版本号 核心函数 silly.gen..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-19T05:56:19.000Z"}],["meta",{"property":"article:tag","content":"核心"}],["meta",{"property":"article:tag","content":"协程"}],["meta",{"property":"article:tag","content":"调度器"}],["meta",{"property":"article:modified_time","content":"2025-10-19T05:56:19.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"silly\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-10-19T05:56:19.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"重归混沌\\",\\"url\\":\\"https://blog.gotocoding.com\\"}]}"]]},"git":{"createdTime":1759638427000,"updatedTime":1760853379000,"contributors":[{"name":"findstr","username":"findstr","email":"findstr@sina.com","commits":3,"url":"https://github.com/findstr"}]},"readingTime":{"minutes":3.62,"words":1087},"filePathRelative":"reference/silly.md","localizedDate":"2025年10月5日","autoDesc":true}');export{u as comp,A as data};
