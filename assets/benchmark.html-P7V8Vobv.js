import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{e as n,f as a,o as l}from"./app-Dhj7NXvN.js";const e={};function t(p,s){return l(),n("div",null,s[0]||(s[0]=[a(`<h1 id="性能基准测试" tabindex="-1"><a class="header-anchor" href="#性能基准测试"><span>性能基准测试</span></a></h1><p>本页面展示 Silly 框架在不同场景下的性能表现。</p><h2 id="测试环境" tabindex="-1"><a class="header-anchor" href="#测试环境"><span>测试环境</span></a></h2><p><strong>测试机型</strong>：</p><ul><li>CPU: Intel(R) Core(TM) i7-10700 CPU @ 2.90GHz</li><li>测试工具: redis-benchmark</li></ul><p><strong>测试命令</strong>：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">./redis-benchmark</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -t</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ping</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -c</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 100</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -n</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 100000</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="测试代码" tabindex="-1"><a class="header-anchor" href="#测试代码"><span>测试代码</span></a></h2><div class="language-lua line-numbers-mode" data-highlighter="shiki" data-ext="lua" data-title="lua" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> tcp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">require</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;silly.net.tcp&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> readline</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">tcp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.readline</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> write</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">tcp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.write</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> listenfd</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">tcp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">listen</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;127.0.0.1:6379&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#ABB2BF;--shiki-dark-font-style:italic;">fd</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#ABB2BF;--shiki-dark-font-style:italic;">addr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    while</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> do</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> l</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">readline</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">fd</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> not </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">l</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> then</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            break</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        end</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> l</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> == </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;save</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\r\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot; </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">then</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">            write</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">fd</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;*2</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\r\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">$4</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\r\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">save</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\r\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">$23</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\r\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">3600 1 300 100 60 10000</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\r\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        elseif</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> l</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> == </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;appendonly</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\r\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot; </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">then</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">            write</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">fd</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;*2</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\r\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">$10</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\r\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">appendonly</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\r\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">$2</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\r\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">no</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\r\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        elseif</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> l</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> == </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;PING</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\r\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot; </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">then</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">            write</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">fd</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;+PONG</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\r\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        end</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    end</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">end</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="测试结果" tabindex="-1"><a class="header-anchor" href="#测试结果"><span>测试结果</span></a></h2><h3 id="ping-inline" tabindex="-1"><a class="header-anchor" href="#ping-inline"><span>PING_INLINE</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>====== PING_INLINE ======</span></span>
<span class="line"><span>  100000 requests completed in 0.42 seconds</span></span>
<span class="line"><span>  100 parallel clients</span></span>
<span class="line"><span>  3 bytes payload</span></span>
<span class="line"><span>  keep alive: 1</span></span>
<span class="line"><span>  host configuration &quot;save&quot;: 3600 1 300 100 60 10000</span></span>
<span class="line"><span>  host configuration &quot;appendonly&quot;: no</span></span>
<span class="line"><span>  multi-thread: no</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Latency by percentile distribution:</span></span>
<span class="line"><span>0.000% &lt;= 0.087 milliseconds (cumulative count 1)</span></span>
<span class="line"><span>50.000% &lt;= 0.223 milliseconds (cumulative count 53428)</span></span>
<span class="line"><span>75.000% &lt;= 0.247 milliseconds (cumulative count 82236)</span></span>
<span class="line"><span>87.500% &lt;= 0.263 milliseconds (cumulative count 90896)</span></span>
<span class="line"><span>93.750% &lt;= 0.279 milliseconds (cumulative count 95021)</span></span>
<span class="line"><span>96.875% &lt;= 0.295 milliseconds (cumulative count 96880)</span></span>
<span class="line"><span>98.438% &lt;= 0.327 milliseconds (cumulative count 98451)</span></span>
<span class="line"><span>99.219% &lt;= 0.391 milliseconds (cumulative count 99243)</span></span>
<span class="line"><span>99.609% &lt;= 0.455 milliseconds (cumulative count 99642)</span></span>
<span class="line"><span>99.805% &lt;= 0.983 milliseconds (cumulative count 99806)</span></span>
<span class="line"><span>99.902% &lt;= 1.007 milliseconds (cumulative count 99905)</span></span>
<span class="line"><span>99.951% &lt;= 1.183 milliseconds (cumulative count 99953)</span></span>
<span class="line"><span>99.976% &lt;= 1.503 milliseconds (cumulative count 99976)</span></span>
<span class="line"><span>99.988% &lt;= 1.511 milliseconds (cumulative count 99990)</span></span>
<span class="line"><span>99.994% &lt;= 1.527 milliseconds (cumulative count 100000)</span></span>
<span class="line"><span>100.000% &lt;= 1.527 milliseconds (cumulative count 100000)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Cumulative distribution of latencies:</span></span>
<span class="line"><span>0.006% &lt;= 0.103 milliseconds (cumulative count 6)</span></span>
<span class="line"><span>25.212% &lt;= 0.207 milliseconds (cumulative count 25212)</span></span>
<span class="line"><span>97.423% &lt;= 0.303 milliseconds (cumulative count 97423)</span></span>
<span class="line"><span>99.369% &lt;= 0.407 milliseconds (cumulative count 99369)</span></span>
<span class="line"><span>99.697% &lt;= 0.503 milliseconds (cumulative count 99697)</span></span>
<span class="line"><span>99.763% &lt;= 0.607 milliseconds (cumulative count 99763)</span></span>
<span class="line"><span>99.765% &lt;= 0.703 milliseconds (cumulative count 99765)</span></span>
<span class="line"><span>99.905% &lt;= 1.007 milliseconds (cumulative count 99905)</span></span>
<span class="line"><span>99.962% &lt;= 1.207 milliseconds (cumulative count 99962)</span></span>
<span class="line"><span>99.976% &lt;= 1.503 milliseconds (cumulative count 99976)</span></span>
<span class="line"><span>100.000% &lt;= 1.607 milliseconds (cumulative count 100000)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Summary:</span></span>
<span class="line"><span>  throughput summary: 235849.06 requests per second</span></span>
<span class="line"><span>  latency summary (msec):</span></span>
<span class="line"><span>          avg       min       p50       p95       p99       max</span></span>
<span class="line"><span>        0.230     0.080     0.223     0.279     0.367     1.527</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>关键指标</strong>：</p><ul><li><strong>吞吐量</strong>: 235,849 请求/秒</li><li><strong>平均延迟</strong>: 0.230ms</li><li><strong>P50 延迟</strong>: 0.223ms</li><li><strong>P95 延迟</strong>: 0.279ms</li><li><strong>P99 延迟</strong>: 0.367ms</li><li><strong>最大延迟</strong>: 1.527ms</li></ul><h3 id="ping-mbulk" tabindex="-1"><a class="header-anchor" href="#ping-mbulk"><span>PING_MBULK</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>====== PING_MBULK ======</span></span>
<span class="line"><span>  100000 requests completed in 0.44 seconds</span></span>
<span class="line"><span>  100 parallel clients</span></span>
<span class="line"><span>  3 bytes payload</span></span>
<span class="line"><span>  keep alive: 1</span></span>
<span class="line"><span>  host configuration &quot;save&quot;: 3600 1 300 100 60 10000</span></span>
<span class="line"><span>  host configuration &quot;appendonly&quot;: no</span></span>
<span class="line"><span>  multi-thread: no</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Latency by percentile distribution:</span></span>
<span class="line"><span>0.000% &lt;= 0.143 milliseconds (cumulative count 1)</span></span>
<span class="line"><span>50.000% &lt;= 0.231 milliseconds (cumulative count 53801)</span></span>
<span class="line"><span>75.000% &lt;= 0.255 milliseconds (cumulative count 78576)</span></span>
<span class="line"><span>87.500% &lt;= 0.279 milliseconds (cumulative count 89337)</span></span>
<span class="line"><span>93.750% &lt;= 0.311 milliseconds (cumulative count 93872)</span></span>
<span class="line"><span>96.875% &lt;= 0.391 milliseconds (cumulative count 97004)</span></span>
<span class="line"><span>98.438% &lt;= 0.447 milliseconds (cumulative count 98524)</span></span>
<span class="line"><span>99.219% &lt;= 0.495 milliseconds (cumulative count 99232)</span></span>
<span class="line"><span>99.609% &lt;= 0.559 milliseconds (cumulative count 99644)</span></span>
<span class="line"><span>99.805% &lt;= 0.639 milliseconds (cumulative count 99811)</span></span>
<span class="line"><span>99.902% &lt;= 0.679 milliseconds (cumulative count 99904)</span></span>
<span class="line"><span>99.951% &lt;= 0.791 milliseconds (cumulative count 99954)</span></span>
<span class="line"><span>99.976% &lt;= 0.839 milliseconds (cumulative count 99981)</span></span>
<span class="line"><span>99.988% &lt;= 0.855 milliseconds (cumulative count 99992)</span></span>
<span class="line"><span>99.994% &lt;= 0.863 milliseconds (cumulative count 99997)</span></span>
<span class="line"><span>99.998% &lt;= 0.879 milliseconds (cumulative count 99999)</span></span>
<span class="line"><span>99.999% &lt;= 0.887 milliseconds (cumulative count 100000)</span></span>
<span class="line"><span>100.000% &lt;= 0.887 milliseconds (cumulative count 100000)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Cumulative distribution of latencies:</span></span>
<span class="line"><span>0.000% &lt;= 0.103 milliseconds (cumulative count 0)</span></span>
<span class="line"><span>20.267% &lt;= 0.207 milliseconds (cumulative count 20267)</span></span>
<span class="line"><span>93.185% &lt;= 0.303 milliseconds (cumulative count 93185)</span></span>
<span class="line"><span>97.642% &lt;= 0.407 milliseconds (cumulative count 97642)</span></span>
<span class="line"><span>99.303% &lt;= 0.503 milliseconds (cumulative count 99303)</span></span>
<span class="line"><span>99.750% &lt;= 0.607 milliseconds (cumulative count 99750)</span></span>
<span class="line"><span>99.920% &lt;= 0.703 milliseconds (cumulative count 99920)</span></span>
<span class="line"><span>99.960% &lt;= 0.807 milliseconds (cumulative count 99960)</span></span>
<span class="line"><span>100.000% &lt;= 0.903 milliseconds (cumulative count 100000)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Summary:</span></span>
<span class="line"><span>  throughput summary: 224719.11 requests per second</span></span>
<span class="line"><span>  latency summary (msec):</span></span>
<span class="line"><span>          avg       min       p50       p95       p99       max</span></span>
<span class="line"><span>        0.241     0.136     0.231     0.335     0.479     0.887</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>关键指标</strong>：</p><ul><li><strong>吞吐量</strong>: 224,719 请求/秒</li><li><strong>平均延迟</strong>: 0.241ms</li><li><strong>P50 延迟</strong>: 0.231ms</li><li><strong>P95 延迟</strong>: 0.335ms</li><li><strong>P99 延迟</strong>: 0.479ms</li><li><strong>最大延迟</strong>: 0.887ms</li></ul><h2 id="性能总结" tabindex="-1"><a class="header-anchor" href="#性能总结"><span>性能总结</span></a></h2><table><thead><tr><th>测试类型</th><th style="text-align:right;">吞吐量 (请求/秒)</th><th style="text-align:right;">平均延迟</th><th style="text-align:right;">P99 延迟</th></tr></thead><tbody><tr><td>PING_INLINE</td><td style="text-align:right;">235,849</td><td style="text-align:right;">0.230ms</td><td style="text-align:right;">0.367ms</td></tr><tr><td>PING_MBULK</td><td style="text-align:right;">224,719</td><td style="text-align:right;">0.241ms</td><td style="text-align:right;">0.479ms</td></tr></tbody></table><h2 id="性能特点" tabindex="-1"><a class="header-anchor" href="#性能特点"><span>性能特点</span></a></h2><p>Silly 框架展现出以下性能特点：</p><ol><li><strong>高吞吐量</strong> - 单进程单线程即可达到 20 万+ QPS</li><li><strong>低延迟</strong> - P99 延迟小于 0.5ms，平均延迟约 0.24ms</li><li><strong>稳定性好</strong> - 延迟分布集中，最大延迟控制在 2ms 以内</li><li><strong>资源高效</strong> - 单线程业务逻辑模型，无锁竞争</li></ol><h2 id="优化建议" tabindex="-1"><a class="header-anchor" href="#优化建议"><span>优化建议</span></a></h2><p>要获得最佳性能，建议：</p><ol><li><strong>使用最新版本</strong> - 每个版本都包含性能优化</li><li><strong>启用 jemalloc</strong> - 编译时使用 <code>make MALLOC=jemalloc</code></li><li><strong>CPU 亲和性</strong> - 使用 <code>--socket_cpu_affinity</code> 和 <code>--worker_cpu_affinity</code> 绑定 CPU</li><li><strong>避免阻塞操作</strong> - 所有 I/O 使用异步 API</li><li><strong>合理使用协程</strong> - 避免创建过多协程导致调度开销</li></ol><h2 id="自行测试" tabindex="-1"><a class="header-anchor" href="#自行测试"><span>自行测试</span></a></h2><p>您可以使用以下命令重现基准测试：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 编译 Silly</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">make</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 运行测试服务器</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">./silly</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> benchmark.lua</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 在另一个终端运行 redis-benchmark</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">redis-benchmark</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -t</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ping</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -c</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 100</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -n</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 100000</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中 <code>benchmark.lua</code> 包含上述测试代码。</p>`,30)]))}const c=i(e,[["render",t],["__file","benchmark.html.vue"]]),r=JSON.parse('{"path":"/benchmark.html","title":"性能基准测试","lang":"zh-CN","frontmatter":{"title":"性能基准测试","icon":"chart-line","order":10,"description":"性能基准测试 本页面展示 Silly 框架在不同场景下的性能表现。 测试环境 测试机型： CPU: Intel(R) Core(TM) i7-10700 CPU @ 2.90GHz 测试工具: redis-benchmark 测试命令： 测试代码 测试结果 PING_INLINE 关键指标： 吞吐量: 235,849 请求/秒 平均延迟: 0.230m...","head":[["meta",{"property":"og:url","content":"https://gotocoding.com/silly/benchmark.html"}],["meta",{"property":"og:site_name","content":"参考手册"}],["meta",{"property":"og:title","content":"性能基准测试"}],["meta",{"property":"og:description","content":"性能基准测试 本页面展示 Silly 框架在不同场景下的性能表现。 测试环境 测试机型： CPU: Intel(R) Core(TM) i7-10700 CPU @ 2.90GHz 测试工具: redis-benchmark 测试命令： 测试代码 测试结果 PING_INLINE 关键指标： 吞吐量: 235,849 请求/秒 平均延迟: 0.230m..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-06T05:50:22.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-06T05:50:22.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"性能基准测试\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-10-06T05:50:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"重归混沌\\",\\"url\\":\\"https://blog.gotocoding.com\\"}]}"]]},"git":{"createdTime":1759729822000,"updatedTime":1759729822000,"contributors":[{"name":"findstr","username":"findstr","email":"findstr@sina.com","commits":1,"url":"https://github.com/findstr"}]},"readingTime":{"minutes":3.23,"words":970},"filePathRelative":"benchmark.md","localizedDate":"2025年10月6日","autoDesc":true}');export{c as comp,r as data};
